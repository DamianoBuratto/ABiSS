;====================================================
; NVT equilibration for FEP
; similar to 'Free Energy of Solvation' tutorial Justin A. Lemkul, Ph.D.
;====================================================

define          	= -DKEY_define

;----------------------------------------------------
; RUN CONTROL
;----------------------------------------------------

integrator   		= sd            	; stochastic leap-frog integrator
tinit			= 0
nsteps       		= KEY_nsteps    	; 2 * 5,000 fs = 10 ps
dt           		= KEY_dt        	; 2 fs
comm-mode    		= Linear        	; remove center of mass translation
nstcomm      		= 100           	; frequency for center of mass motion removal

;----------------------------------------------------
; OUTPUT CONTROL
;----------------------------------------------------
nstxout                  = 25000	        ; scrive ogni [50ps]steps (coordinates)
nstvout                  = 0                    ; No output, except for last frame (velocities)
nstfout                  = 0                    ; No output, except for last frame (forces)
nstlog                   = 25000                ; Write every step to the log 
nstenergy                = 25000                ; Write energies at every step
nstxtcout                = 25000                ; Write a compressed trajectory every 100ps
xtc_precision            = 5000
xtc-grps                 = System

;----------------------------------------------------
; constrain the starting configuration
;----------------------------------------------------
continuation             = no

;----------------------------------------------------
; BONDS
;----------------------------------------------------
constraints		= hbonds		; Convert the bonds with H-atoms to constraints
constraint-algorithm	= LINCS			; SHAKE
lincs-order		= 12			; Highest order in the expansion of the constraint coupling matrix

;----------------------------------------------------
; NEIGHBOR SEARCHING
;----------------------------------------------------
cutoff-scheme 		= Verlet
nstlist			= 20			; Frequency to update the neighbor list and long range forces
ns_type			= grid			; Method to determine neighbor list (simple, grid)
rlist			= 1.0			; (1.2 on the tutorial) Cut-off for making neighbor list (short range forces)
pbc             	= xyz

;----------------------------------------------------
; ELECTROSTATICS and VDW
;----------------------------------------------------
coulombtype             = PME				; ?
coulomb-modifier	= Potential-shift-Verlet	; it is (nearly) free with verlet cutoff-scheme
rcoulomb                = 1.0				; (1.2 on the tutorial) distance for the Coulomb cut-off
vdwtype                 = cutoff
vdw-modifier		= Potential-shift-Verlet	; it is (nearly) free with verlet cutoff-scheme
rvdw                    = 1.0				; (1.2 on the tutorial) ?
rvdw-switch             = 1.0
optimize_fft		= yes				; Calculate the optimal FFT plan for the grid at startup.

; Spacing for the PME/PPPM FFT grid
fourierspacing		= 0.12
; EWALD/PME/PPPM parameters
pme_order		= 4
ewald_rtol		= 1e-06
epsilon_surface 	= 0

DispCorr		= EnerPres

;----------------------------------------------------
; TEMPERATURE & PRESSURE COUPL
;----------------------------------------------------
; tcoupl is implicitly handled by the sd integrator
tc_grps          	= System
tau_t            	= 1.0
ref_t            	= 300
pcoupl           	=  no

;----------------------------------------------------
; VELOCITY GENERATION
;----------------------------------------------------
gen_vel      		= yes      	; Velocity generation is on (if gen_vel is 'yes', continuation should be 'no')
gen_seed     		= -1       	; Use random seed
gen_temp     		= 300


;----------------------------------------------------
; Adaptive Resolution Simulation (deprecated)
;----------------------------------------------------
adress                 	= no

;----------------------------------------------------
; Pull code
;----------------------------------------------------
pull			= no

;----------------------------------------------------
; FREE ENERGY CALCULATIONS
;----------------------------------------------------
free-energy		= yes
couple-moltype		= KEY_couple_moltype
couple-lambda0		= KEY_couple_lambda0
couple-lambda1		= KEY_couple_lambda1
couple-intramol		= yes
separate-dhdl-file	= yes
sc-coul			= KEY_sc_coul
sc-alpha		= 0.5
sc-power		= 1
sc-sigma		= 0.3
init-lambda-state	= 0
fep-lambdas		= KEY_fep_lambdas
bonded-lambdas		= KEY_bonded_lambdas
coul-lambdas		= KEY_coul_lambdas
vdw-lambdas		= KEY_vdw_lambdas
nstdhdl			= 100				;output frequency for the dH/dLambda. It is important to have a good sampling. multiple of nstcalcenergy (default 100)
calc-lambda-neighbors	= 1

